1. Write a Python program to generate a random color hex, a random alphabetical string, random value between two integers (inclusive) and a random multiple of 7 between 0 and 70. Use random.randint()
  
2. Write a Python program to select a random element from a list, set, dictionary (value) and a file from a directory. Use random.choice()
  
3. Write a Python program to generate a random alphabetical character, alphabetical string and alphabetical string of a fixed length. Use random.choice()
  
4. Write a Python program to construct a seeded random number generator, also generate a float between 0 and 1, excluding 1. Use random.random()
  
5. Write a Python program to generate a random integer between 0 and 6 - excluding 6, random integer between 5 and 10 - excluding 10, random integer between 0 and 10, with a step of 3 and random date between two dates. Use random.randrange()
  
6. Write a Python program to shuffle the elements of a given list. Use random.shuffle()
  
7. Write a Python program to generate a float between 0 and 1, inclusive and generate a random float within a specific range. Use random.uniform()
  
8. Write a Python program to create a list of random integers and randomly select multiple items from the said list. Use random.sample()
  
9. Write a Python program to set a random seed and get a random number between 0 and 1. Use random.random.   
Module - types

1. Write a Python program to check if a function is a user-defined function or not. Use types.FunctionType, types.LambdaType()
  
2. Write a Python program to check if a given value is a method of a user-defined class. Use types.MethodType()
  
3. Write a Python program to check if a given function is a generator or not. Use types.GeneratorType()
  
4. Write a Python program to check if a given value is compiled code or not. Also check if a given value is a module or not. Use types.CodeType, types.ModuleType()
  
Module - decimal

1. Write a Python program to construct a Decimal from a float and a Decimal from a string. Also represent the Decimal value as a tuple. Use decimal.Decimal
  
2. Write a Python program to configure the rounding to round up and round down a given decimal value. Use decimal.Decimal
  
3. Write a Python program to round a Decimal value to the nearest multiple of 0.10, unless already an exact multiple of 0.05. Use decimal.Decimal
  
4. Write a Python program to configure the rounding to round to the floor, ceiling. Use decimal.ROUND_FLOOR, decimal.ROUND_CEILING
  
5. Write a Python program to configure the rounding to round to the nearest - with ties going towards 0, with ties going away from 0. Use decimal.ROUND_HALF_DOWN, decimal.ROUND_HALF_UP
  
6. Write a Python program to configure the rounding to round to the nearest, with ties going to the nearest even integer. Use decimal.ROUND_HALF_EVEN
  
7. Write a Python program to display a given decimal value in scientific notation. Use decimal.Decimal
  
Module - copy

1. Write a Python program to create a shallow copy of a given list. Use copy.copy
  
2. Write a Python program to create a deep copy of a given list. Use copy.copy
  
3. Write a Python program to create a shallow copy of a given dictionary. Use copy.copy
  
4. Write a Python program to create a deep copy of a given dictionary. Use copy.copy
  
Module - csv

1. Write a Python program to read and display the content of a given CSV file. Use csv.reader
  
2. Write a Python program to count the number of lines in a given CSV file. Use csv.reader
  
3. Write a Python program to parse a given CSV string and get the list of lists of string values. Use csv.reader
  
4. Write a Python program to read the current line from a given CSV file. Use csv.reader
  
5. Write a Python program to skip the headers of a given CSV file. Use csv.reader
  
6. Write a Python program to write (without writing separate lines between rows) and read a CSV file with specified delimiter. Use csv.reader
  
7. Write a Python program to write dictionaries and a list of dictionaries to a given CSV file. Use csv.reader
